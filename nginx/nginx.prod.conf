events {
    # Le processus NGINX peut gérer jusqu’à 1024 connexions simultanées.
    worker_connections 1024;
}

http {
    # Inclusion des types MIME essentiels pour correctement servir les fichiers.
    include       /etc/nginx/mime.types;
    # Type MIME par défaut si non reconnu.
    default_type  application/octet-stream;

    # Activation de la compression gzip pour améliorer la performance réseau.
    gzip on;
    gzip_vary on;                       # Permet de gérer la réponse gzip en fonction de l'en-tête Accept-Encoding.
    gzip_min_length 1024;               # Active gzip uniquement pour les réponses > 1Ko.
    # Types MIME pour lesquels la compression gzip est activée.
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Bloc upstream backend:
    # Définit un alias "backend" pointant vers le container backend sur le port 3001.
    upstream backend {
        server backend:3001;
    }

    server {
        # Le serveur écoute sur le port 80 (HTTP standard).
        listen 80;
        server_name localhost;

        # Fichier index à servir par défaut dans le dossier racine.
        index index.html;

        # Fichiers de logs pour debug (accès et erreurs).
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;

        # Route API:
        # Toutes les requêtes commençant par /api sont proxyées vers le backend Fastify.
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;       # Version HTTP nécessaire pour certaines fonctionnalités avancées comme WebSocket (ici moins critique en prod).
            
            # Transmission des en-têtes d’origine pour conserver l’info client dans le backend.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout pour la connexion proxy (utile pour éviter les blocages).
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Route pour servir les assets statiques (JS, CSS, images, polices, etc.)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;     # Racine où sont copiés les fichiers build frontend.
            
            # Cache long (1 an) car ces fichiers sont versionnés (hash dans le nom).
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Pas de logs d’accès pour ces fichiers statiques (pour alléger les logs).
            access_log off;
        }

        # Route principale pour le frontend (SPA - Single Page Application).
        location / {
            root /usr/share/nginx/html;     # Racine des fichiers frontend statiques.

            # History API fallback : si la route n'existe pas en fichier, on sert index.html.
            try_files $uri $uri/ /index.html;

            # Cache-control léger sur HTML
            add_header Cache-Control "no-cache, must-revalidate";
        }

        # Route de test simple pour vérifier que nginx fonctionne bien.
        location /nginx-status {
            return 200 "nginx is working";
            add_header Content-Type text/plain;
        }
    }
}
